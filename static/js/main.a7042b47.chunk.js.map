{"version":3,"sources":["features/tasks/TasksPage/Form/styled.js","features/tasks/Input/index.js","features/tasks/tasksLocalStorage.js","features/tasks/tasksSlice.js","features/tasks/TasksPage/Form/index.js","features/tasks/TasksPage/Form/useForm.js","features/tasks/TasksPage/TaskList/styled.js","features/tasks/TasksPage/Search/searchQueryParamName.js","routes.js","features/tasks/TasksPage/TaskList/index.js","features/tasks/TasksPage/Button/index.js","features/tasks/TasksPage/Buttons/index.js","features/tasks/TasksPage/SampleTasksButton/index.js","common/Section/styled.js","common/Section/index.js","common/Header/styled.js","common/Header/index.js","common/Container/index.js","features/tasks/TasksPage/Search/styled.js","features/tasks/TasksPage/Search/index.js","features/tasks/TasksPage/queryParameters.js","features/tasks/TasksPage/index.js","features/tasks/TaskPage/styled.js","features/tasks/TaskPage/index.js","features/author/styled.js","features/author/VanGiau.jpg","features/author/AuthorPage.js","Navigation/styled.js","Navigation/index.js","App.js","reportWebVitals.js","GlobalStyle.js","features/tasks/getExampleTasks.js","features/tasks/tasksSaga.js","rootSaga.js","store.js","index.js","theme.js"],"names":["FormElement","styled","form","FormButton","button","theme","color","teal","white","breakpoint","mobileMax","Input","input","localStorageKey","saveTasksInLocalStorage","tasks","localStorage","setItem","JSON","stringify","tasksSlice","createSlice","name","initialState","getItem","parse","hideDone","status","reducers","addTask","task","payload","push","toggleHideDone","state","toggleTaskDone","tasksId","index","findIndex","id","done","removeTask","taskId","splice","setAllDone","fetchExampleTasks","fetchExampleTasksSuccess","fetchExampleTasksError","actions","selectTasksState","selectTasks","selectHideDone","selectAreTasksNotEmpty","length","selectIsEveryTaskDone","every","selectLoading","Form","useState","newTaskContent","setNewTaskContent","inputRef","useRef","focusInput","current","focus","useForm","dispatch","useDispatch","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","today","Date","date","getDate","getMonth","getFullYear","content","time","nanoid","autoFocus","ref","value","placeholder","onChange","target","onClick","StyledLink","ul","li","hidden","css","span","a","Button","toggleDone","green","remove","red","toTask","TaskList","location","useLocation","query","URLSearchParams","search","get","searchQueryParamName","useSelector","filter","toUpperCase","includes","selectTasksByQuery","map","className","contentStyle","background","contentArrowStyle","borderRight","icon","iconStyle","style","fontWeight","textShadow","as","Link","to","ButtonsDiv","div","ButtonAdditional","grey","Buttons","areTasksNotEmpty","isEveryTaskDone","disabled","SampleTasksButton","loading","PageSection","section","PageSectionDiv","PageSectionH2","h2","Section","title","body","extraContent","PageHeader","header","Header","Container","children","Wrapper","parameter","useQueryParameter","replaceQueryParameter","history","useHistory","key","searchParams","set","delete","pathname","toString","useReplaceQueryParameter","undefined","TasksPage","Search","TaskPage","useParams","find","getTaskById","margin","data-href","data-layout","data-size","href","mobile","Image","img","StyledParagraph","p","src","VanGiau","alt","activeClassName","StyledNavLink","NavLink","attrs","StyledNav","nav","StyledList","StyledItem","Navigation","path","AuthorPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","getExampleTasks","fetch","response","ok","Error","statusText","json","fetchExampleTasksHandler","saveTasksInLocalStorageHandler","tasksSaga","delay","call","exampleTasks","put","alert","select","throttle","type","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","tasksReducer","middleware","run","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.a7042b47.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormElement = styled.form`\r\n    padding: 20px;\r\n    background: white;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n    background: ${({ theme }) => theme.color.teal};\r\n    color: ${({ theme }) => theme.color.white};\r\n    padding: 11px;\r\n    margin: 0px 0px 0px 15px;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: 1s;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        flex-basis: 100%;\r\n        margin: 7px 0px;\r\n    }\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n        transform: scale(1.1);\r\n    }   \r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n    flex-grow: 1;\r\n    padding: 10px;\r\n    border: 1px solid #80808040;\r\n    border-radius: 1px;\r\n    font-size: 16px;\r\n`;","const localStorageKey = \"tasks\";\r\n\r\nexport const saveTasksInLocalStorage = tasks =>\r\n    localStorage.setItem(localStorageKey, JSON.stringify(tasks));\r\n\r\nexport const getTasksFromLocalStorage = () => {\r\n    return localStorage.getItem(localStorageKey)\r\n        ? JSON.parse(localStorage.getItem(localStorageKey))\r\n        : [];\r\n};","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getTasksFromLocalStorage } from \"./tasksLocalStorage\";\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState: {\r\n        tasks: getTasksFromLocalStorage(),\r\n        hideDone: false,\r\n        status: \"success\"\r\n    },\r\n    reducers: {\r\n        addTask: ({ tasks }, { payload: task }) => {\r\n            tasks.push(task);\r\n        },\r\n        toggleHideDone: state => {\r\n            state.hideDone = !state.hideDone;\r\n        },\r\n        toggleTaskDone: ({ tasks }, { payload: tasksId }) => {\r\n            const index = tasks.findIndex(({ id }) => id === tasksId);\r\n            tasks[index].done = !tasks[index].done;\r\n        },\r\n        removeTask: ({ tasks }, { payload: taskId }) => {\r\n            const index = tasks.findIndex(({ id }) => id === taskId);\r\n            tasks.splice(index, 1);\r\n        },\r\n        setAllDone: ({ tasks }) => {\r\n            for (const task of tasks) {\r\n                task.done = true;\r\n            }\r\n        },\r\n        fetchExampleTasks: (state) => {\r\n            state.status = \"loading\";\r\n        },\r\n        fetchExampleTasksSuccess: (state, { payload: tasks }) => {\r\n            state.tasks = tasks;\r\n            state.status = \"success\";\r\n        },\r\n        fetchExampleTasksError: (state) => {\r\n            state.status = \"error\";\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    addTask,\r\n    toggleHideDone,\r\n    toggleTaskDone,\r\n    removeTask,\r\n    setAllDone,\r\n    fetchExampleTasks,\r\n    fetchExampleTasksSuccess,\r\n    fetchExampleTasksError,\r\n} = tasksSlice.actions;\r\n\r\nexport const selectTasksState = state => state.tasks;\r\n\r\nexport const selectTasks = state => selectTasksState(state).tasks;\r\nexport const selectHideDone = state => selectTasksState(state).hideDone;\r\nexport const selectAreTasksNotEmpty = state => selectTasks(state).length > 0;\r\nexport const selectIsEveryTaskDone = state => selectTasks(state).every(({ done }) => done);\r\nexport const selectIsAnyTaskDone = state => selectTasks(state).some(({ done }) => done);\r\nexport const selectLoading = state => selectTasksState(state).status === \"loading\";\r\n\r\nexport const getTaskById = (state, taskId) =>\r\n    selectTasks(state).find(({ id }) => id === taskId);\r\n\r\nexport const selectTasksByQuery = (state, query) => {\r\n    const tasks = selectTasks(state)\r\n\r\n    if (!query || query.trim() === \"\") {\r\n        return tasks;\r\n    }\r\n    return tasks.filter(({ content }) =>\r\n        content.toUpperCase().includes(query.trim().toUpperCase()))\r\n};\r\n\r\nexport default tasksSlice.reducer;","import { FormElement, FormButton } from \"./styled\";\r\nimport { Input } from \"../../Input\";\r\nimport { useForm } from \"./useForm\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { addTask } from \"../../tasksSlice\";\r\n\r\nconst Form = () => {\r\n  const {\r\n    newTaskContent,\r\n    setNewTaskContent,\r\n    inputRef,\r\n    focusInput,\r\n  } = useForm();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onFormSubmit = (event,) => {\r\n    event.preventDefault();\r\n    const trimmedNewTaskContent = newTaskContent.trim();\r\n    var today = new Date();\r\n    var date = today.getDate()+'-'+(today.getMonth()+1)+'-'+today.getFullYear();\r\n    if (trimmedNewTaskContent) {\r\n\r\n      dispatch(addTask({\r\n        content: trimmedNewTaskContent,\r\n        time: date,\r\n        done: false,\r\n        id: nanoid(),\r\n      }));\r\n\r\n      setNewTaskContent(\"\");\r\n    };\r\n  };\r\n\r\n  return (\r\n    <FormElement onSubmit={onFormSubmit}>\r\n      <Input\r\n        autoFocus\r\n        ref={inputRef}\r\n        value={newTaskContent}\r\n        placeholder=\"Nhập tên công việc muốn thêm\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n\r\n      <FormButton onClick={focusInput}>Thêm công việc</FormButton>\r\n    </FormElement>\r\n  );\r\n};\r\n\r\nexport default Form;","import { useState, useRef, } from \"react\";\r\n\r\nexport const useForm = () => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const inputRef = useRef();\r\n\r\n    const focusInput = () => {\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    return {\r\n        newTaskContent,\r\n        setNewTaskContent,\r\n        inputRef,\r\n        focusInput,\r\n    };\r\n};","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    padding: 20px 0px;\r\n    margin: 0px;\r\n    background: white;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: flex;\r\n    margin: 0px 15px;\r\n    padding: 10px;\r\n    align-items: center;\r\n    border-bottom: 1px solid #80808040;\r\n    word-break: break-word;\r\n\r\n   ${({ hidden }) => hidden && css`\r\n        display: none;\r\n   `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    padding: 0px 10px;\r\n    flex-grow: 1;\r\n    color: #565555;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n    text-decoration: none;\r\n    color: white;\r\n    font-size: 20px;\r\n    &:hover{\r\n        filter: brightness(120%);\r\n        color: orange;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background: green;\r\n    border: none;\r\n    width: 27px;\r\n    height: 27px;\r\n    padding: 5px;\r\n    color: white;\r\n    flex-shrink: 0;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background : ${({ theme }) => theme.color.green};\r\n\r\n        &:hover {\r\n            filter: brightness(110%);\r\n    }       \r\n\r\n        &:active {\r\n            filter: brightness(120%);\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background: ${({ theme }) => theme.color.red};\r\n   \r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n    `} \r\n`;","export default \"szukaj\";","export const toTasks = () => \"/todoapp\";\r\nexport const toAuthor = () => \"/tacgia\";\r\n\r\nexport const toTask = ({ id } = { id: \":id\" }) => `/todo/${id}`;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { toggleTaskDone, removeTask, selectHideDone, selectTasksByQuery } from \"../../tasksSlice\";\r\nimport { List, Item, Content, Button, StyledLink } from \"./styled\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport searchQueryParamName from \"../Search/searchQueryParamName\";\r\nimport { toTask } from \"../../../../routes\";\r\nimport './timeline.css'\r\n\r\nimport { VerticalTimeline,VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\n\r\nconst TaskList = () => {\r\n    const location = useLocation();\r\n    const query = (new URLSearchParams(location.search)).get(searchQueryParamName);\r\n\r\n    const tasks = useSelector(state => selectTasksByQuery(state, query));\r\n    const hideDone = useSelector(selectHideDone);\r\n    const dispatch = useDispatch();\r\n    return (\r\n            <VerticalTimeline>\r\n            {tasks.map(task => (\r\n                <VerticalTimelineElement \r\n                        className=\"vertical-timeline-element--work\"\r\n                        contentStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\r\n                        contentArrowStyle={{ borderRight: '7px solid  rgb(33, 150, 243)' }}\r\n                        date={task.time}\r\n                        icon={task.done ? <DoneIcon/> : <WorkIcon />}\r\n                        iconStyle={{ background: 'rgb(33, 150, 343)', color: '#fff' }}\r\n                    >\r\n                        \r\n                        <StyledLink style={{ fontWeight: 'bold', textShadow:'1px 2px 2px black'}}  as={Link} to={toTask({ id: task.id })}>{task.content}</StyledLink>\r\n                        <p></p>\r\n                        <span style={{ color: '#000', fontWeight: 'bold' }}>Trạng thái công việc</span>\r\n                            &nbsp;\r\n                        <Button\r\n                            toggleDone\r\n                            onClick={() => dispatch(toggleTaskDone(task.id))}\r\n                        >\r\n                            {task.done ? \"✓\" : \"X\"}\r\n                        </Button>\r\n                        <p></p>\r\n                        <span style={{ color: '#000', fontWeight: 'bold' }}>Xóa</span>\r\n                            &nbsp;\r\n                        <Button\r\n                            remove\r\n                            onClick={() => dispatch(removeTask(task.id))}\r\n                        >\r\n                        &#128465;\r\n                        </Button>\r\n\r\n                    </VerticalTimelineElement>\r\n            ))}\r\n             <VerticalTimelineElement icon={<StarsIcon/>}\r\n                    iconStyle={{ background: 'rgba(0, 202, 0, 0.947)', color: '#fff' }}>\r\n            </VerticalTimelineElement>\r\n                           \r\n            </VerticalTimeline>\r\n    );\r\n};\r\n\r\nexport default TaskList;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        flex-direction: column;\r\n        flex-basis: 100%;\r\n    }\r\n`;\r\n\r\nexport const ButtonAdditional = styled.button`\r\n    border: none;\r\n    background: ${({ theme }) => theme.color.white};\r\n    color: ${({ theme }) => theme.color.teal};\r\n    grid-gap: 20px;\r\n    transition: 1s;\r\n    margin: 10px 0px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n\r\n    &:disabled {\r\n        color: ${({ theme }) => theme.color.grey};\r\n        cursor: unset;\r\n    }\r\n`;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    selectIsEveryTaskDone,\r\n    selectAreTasksNotEmpty,\r\n    setAllDone,\r\n} from \"../../tasksSlice\";\r\nimport { ButtonsDiv, ButtonAdditional } from \"../Button\";\r\n\r\nconst Buttons = () => {\r\n    const areTasksNotEmpty = useSelector(selectAreTasksNotEmpty);\r\n    const isEveryTaskDone = useSelector(selectIsEveryTaskDone);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <ButtonsDiv>\r\n            {areTasksNotEmpty && (\r\n                <>\r\n  \r\n                    <ButtonAdditional\r\n                        onClick={() => dispatch(setAllDone())}\r\n                        disabled={isEveryTaskDone}\r\n                    >\r\n                        Đánh dấu hoàn thành tất cả\r\n                    </ButtonAdditional>\r\n                </>\r\n            )}\r\n        </ButtonsDiv>\r\n    );\r\n};\r\n\r\nexport default Buttons;","import { ButtonAdditional, ButtonsDiv } from \"../Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchExampleTasks, selectLoading } from \"../../tasksSlice\";\r\n\r\nconst SampleTasksButton = () => {\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(selectLoading);\r\n    return (\r\n        <ButtonsDiv>\r\n            <ButtonAdditional\r\n                disabled={loading}\r\n                onClick={() => dispatch(fetchExampleTasks())}>\r\n                {loading\r\n                    ? \"Đang tải...\"\r\n                    : \"Tải xuống dữ liệu mẫu\"\r\n                }\r\n            </ButtonAdditional>\r\n\r\n        </ButtonsDiv>\r\n    );\r\n};\r\n\r\nexport default SampleTasksButton;","import styled from \"styled-components\";\r\n\r\nexport const PageSection = styled.section`\r\n     margin: 0 5px 5px;\r\n`;\r\n\r\nexport const PageSectionDiv = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    background: ${({ theme }) => theme.color.white};\r\n    margin: 0px 0px 1px 0px;\r\n    padding-right: 15px;\r\n`;\r\n\r\nexport const PageSectionH2 = styled.h2`\r\n    margin: 0 0 1px;\r\n    padding: 15px;\r\n    background: ${({ theme }) => theme.color.white};\r\n    font-size: 17px;\r\n`;","import { PageSection, PageSectionDiv, PageSectionH2 } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraContent }) => (\r\n    <PageSection>\r\n        <PageSectionDiv>\r\n            <PageSectionH2>{title}</PageSectionH2>\r\n            {extraContent}\r\n        </PageSectionDiv>\r\n        {body}\r\n    </PageSection>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const PageHeader = styled.header`\r\n    margin: 0px 5px;\r\n`;","import { PageHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <PageHeader>\r\n        <h1>{title}</h1>\r\n    </PageHeader>\r\n);\r\n\r\nexport default Header;","const Container = ({ children }) => (\r\n    <main>\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    padding: 20px;\r\n    background: ${({ theme }) => theme.color.white};\r\n`;","/* eslint-disable import/no-anonymous-default-export */\r\nimport { Input } from \"../../Input\";\r\nimport { Wrapper } from \"./styled\";\r\nimport searchQueryParamName from \"./searchQueryParamName\";\r\nimport { useQueryParameter, useReplaceQueryParameter } from \"../queryParameters\";\r\n\r\nexport default () => {\r\n    const query = useQueryParameter(searchQueryParamName);\r\n    const replaceQueryParameter = useReplaceQueryParameter();\r\n\r\n    const onInputChange = ({ target }) => {\r\n        replaceQueryParameter({\r\n            key: searchQueryParamName,\r\n            value: target.value.trim() !== \"\" ? target.value : undefined,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Input\r\n                placeholder=\"Nhập từ khóa cần tìm\"\r\n                value={query || \"\"}\r\n                onChange={onInputChange}\r\n            />\r\n        </Wrapper>\r\n    );\r\n};","import { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport const useQueryParameter = (parameter) => {\r\n    const location = useLocation();\r\n    return (\r\n        (new URLSearchParams(location.search)).get(parameter)\r\n    );\r\n};\r\n\r\nexport const useReplaceQueryParameter = () => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    return ({ key, value }) => {\r\n        const searchParams = new URLSearchParams(location.search);\r\n\r\n        if (!value) {\r\n            searchParams.delete(key);\r\n        } else {\r\n            searchParams.set(key, value);\r\n        };\r\n\r\n        history.push(`${location.pathname}?${searchParams.toString()}`)\r\n    };\r\n};","import Form from \"./Form\";\r\nimport TaskList from \"./TaskList\";\r\nimport Buttons from \"./Buttons\";\r\nimport SampletasksButton from \"./SampleTasksButton\";\r\nimport Section from \"../../../common/Section\";\r\nimport Header from \"../../../common/Header\";\r\nimport Container from \"../../../common/Container\";\r\nimport Search from \"./Search\";\r\n\r\nfunction TasksPage() {\r\n  return (\r\n    <Container>\r\n      <Header\r\n        title=\"QUẢN LÝ CÔNG VIỆC\"\r\n      />\r\n\r\n      <Section\r\n        title=\"Thêm mới\"\r\n        body={<Form />}\r\n        extraContent={<SampletasksButton />}\r\n      />\r\n\r\n      <Section\r\n        title=\"Tìm kiếm\"\r\n        body={<Search />}\r\n      />\r\n\r\n      <Section\r\n        title=\"Danh sách các công việc\"\r\n        body={<TaskList />}\r\n        extraContent={<Buttons />}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TasksPage;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 20px;\r\n    background: ${({ theme }) => theme.color.white};\r\n`;","import Section from \"../../../common/Section\";\r\nimport Header from \"../../../common/Header\";\r\nimport Container from \"../../../common/Container\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getTaskById } from \"../tasksSlice\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\nfunction TaskPage() {\r\n    const { id } = useParams();\r\n    const task = useSelector(state => getTaskById(state, id));\r\n\r\n    const styles ={margin: \"12px\"}\r\n    return (\r\n        <Container>\r\n            <Header\r\n                title=\"Chi tiết công việc\"\r\n            />\r\n            <div style={styles}\r\n                className=\"fb-share-button\"\r\n                data-href=\"https://vangiaurecca.github.io/TodoApp_Timeline/wKALyiV8WJIsR-KHsuzCP\"\r\n                data-layout=\"box_count\"\r\n                data-size=\"large\"\r\n            >\r\n                <a\r\n                    target=\"_blank\"\r\n                    href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fvangiaurecca.github.io%2FTodoApp_Timeline%2F&amp;src=sdkpreparse\" \r\n                    className=\"fb-xfbml-parse-ignore\">\r\n                    Chia sẻ</a></div>\r\n            <Section\r\n                title={task ? task.content : \"Không tìm thấy công việc😟\"}\r\n                body={!!task && (\r\n                    <>\r\n                        <Wrapper>\r\n                            <strong>Hoàn thành:</strong> {task.done ? \"Yes\" : \"No\"}\r\n                        </Wrapper>\r\n                    </>\r\n                )}\r\n            />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default TaskPage;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 20px;\r\n    background: ${({ theme }) => theme.color.white};\r\n    text-align: justify;\r\n    display:flex;\r\n    align-items: center;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        text-align: left;\r\n    }\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\r\n        flex-direction: column;\r\n        text-align: left;\r\n    }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    height: 250px;\r\n    width: 250px;\r\n    border-radius: 50px;\r\n    margin: 0 10px;\r\n`;\r\n\r\nexport const StyledParagraph = styled.p`\r\n    align-self: flex-start;\r\n    margin-left : 20px;\r\n`;","export default __webpack_public_path__ + \"static/media/VanGiau.72ade941.jpg\";","/* eslint-disable import/no-anonymous-default-export */\r\nimport Container from \"../../common/Container\";\r\nimport Section from \"../../common/Section\";\r\nimport Header from \"../../common/Header\";\r\nimport { Image, StyledParagraph, Wrapper } from \"./styled\";\r\nimport VanGiau from \"./VanGiau.jpg\";\r\nimport './style.css'\r\n\r\nexport default () => (\r\n    <Container>\r\n        <Header title=\"SINH VIÊN THỰC HIỆN\" />\r\n        <Section\r\n            title=\"Nguyễn Văn Giàu\"\r\n            body={\r\n                <>\r\n                    <Wrapper>\r\n                        <Image src={VanGiau} alt=\"Nguyễn Văn Giàu avatar\" />\r\n                        <StyledParagraph>\r\n                            <p className=\"context\">Họ và tên: Nguyễn Văn Giàu</p>\r\n                            <p className=\"context\">MSSV: 4501104061</p>\r\n                            <p className=\"context\">Trường: Đại học Sư phạm TP.HCM</p>\r\n                            <p className=\"context\">Học phần: Công nghệ Web</p>\r\n                        </StyledParagraph>\r\n                    </Wrapper>\r\n                    \r\n                </>\r\n            }\r\n        />\r\n    </Container>\r\n);","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nconst activeClassName = \"active\";\r\n\r\n\r\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\r\n    activeClassName,\r\n}))`\r\n    color: ${({ theme }) => theme.color.white};\r\n    text-decoration: none;\r\n\r\n    &.${activeClassName} {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nexport const StyledNav = styled.nav`\r\n    background: ${({ theme }) => theme.color.teal}\r\n`;\r\n\r\nexport const StyledList = styled.ul`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 0;\r\n    padding: 15px;\r\n    list-style-type: none;\r\n`;\r\n\r\nexport const StyledItem = styled.li`\r\n    margin: 0 10px;\r\n`;","import { toAuthor, toTasks } from \"../routes\";\r\nimport { StyledItem, StyledList, StyledNav, StyledNavLink } from \"./styled\";\r\n\r\n\r\nconst Navigation = () => (\r\n    <StyledNav>\r\n        <StyledList>\r\n            <StyledItem>\r\n                <StyledNavLink to={toTasks()}>Todo App</StyledNavLink>\r\n            </StyledItem>\r\n            <StyledItem>\r\n                <StyledNavLink to={toAuthor()}>Tác giả</StyledNavLink>\r\n            </StyledItem>\r\n        </StyledList>\r\n    </StyledNav>\r\n);\r\n\r\nexport default Navigation;","/* eslint-disable import/no-anonymous-default-export */\r\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport TasksPage from \"./features/tasks/TasksPage/index\";\r\nimport TaskPage from \"./features/tasks/TaskPage/index\";\r\nimport AuthorPage from \"./features/author/AuthorPage\";\r\nimport { toAuthor, toTask, toTasks } from \"./routes\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nexport default () => (\r\n    <HashRouter>\r\n        <Navigation />\r\n\r\n        <Switch>\r\n            <Route path={toTask()}>\r\n                <TaskPage />\r\n            </Route>\r\n            <Route path={toTasks()}>\r\n                <TasksPage />\r\n            </Route>\r\n            <Route path={toAuthor()}>\r\n                <AuthorPage />\r\n            </Route>\r\n            <Route path=\"/\">\r\n                <Redirect to={toTasks()} />\r\n            </Route>\r\n        </Switch>\r\n\r\n    </HashRouter>\r\n);","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-family: \"Montserrat\", sans-serif;\r\n    margin: 0 auto;\r\n    max-width: 900px;\r\n    background: rgba(219, 216, 216, 0.733);\r\n    font-size: 15px;\r\n}\r\n`;","export const getExampleTasks = async () => {\r\n    const response = await fetch(\"/todo-list-react/exampleTasks.json\");\r\n\r\n    if (!response.ok) {\r\n        new Error(response.statusText);\r\n    }\r\n\r\n    return await response.json();\r\n};","import { throttle, call, put, delay, takeEvery, select } from \"redux-saga/effects\";\r\nimport { getExampleTasks } from \"./getExampleTasks\";\r\nimport { saveTasksInLocalStorage } from \"./tasksLocalStorage\";\r\nimport { fetchExampleTasks, selectTasks, fetchExampleTasksSuccess, fetchExampleTasksError } from \"./tasksSlice\";\r\n\r\nfunction* fetchExampleTasksHandler() {\r\n    try {\r\n        yield delay(1000);\r\n        const exampleTasks = yield call(getExampleTasks);\r\n        yield put(fetchExampleTasksSuccess(exampleTasks));\r\n    } catch (error) {\r\n        yield put(fetchExampleTasksError());\r\n        yield call(alert, \"Đã xảy ra lỗi\");\r\n    };\r\n};\r\n\r\nfunction* saveTasksInLocalStorageHandler() {\r\n    const tasks = yield select(selectTasks);\r\n    yield call(saveTasksInLocalStorage, tasks)\r\n};\r\n\r\nexport function* tasksSaga() {\r\n    yield throttle(2_000, fetchExampleTasks.type, fetchExampleTasksHandler);\r\n    yield takeEvery(\"*\", saveTasksInLocalStorageHandler);\r\n};","import { all } from \"@redux-saga/core/effects\";\r\nimport { tasksSaga } from \"./features/tasks/tasksSaga\";\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        tasksSaga(),\r\n    ])\r\n}","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport tasksReducer from \"./features/tasks/tasksSlice\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        tasks: tasksReducer,\r\n    },\r\n    middleware: [sagaMiddleware]\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Normalize } from 'styled-normalize';\r\nimport { Provider } from 'react-redux';\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { theme } from \"./theme\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <Normalize />\r\n        <GlobalStyle />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const theme = {\r\n    color: {\r\n        green: \"#00800\",\r\n        red: \"#ff0000\",\r\n        teal: \"teal\",\r\n        white: \"white\",\r\n        grey: \"grey\",\r\n    },\r\n    breakpoint: {\r\n        mobile: 500,\r\n        mobileMax:767,\r\n    },\r\n};"],"sourceRoot":""}